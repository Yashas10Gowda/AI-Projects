{"version":3,"file":"comment-sense.js","sourceRoot":"","sources":["../comment-sense.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAIhE,IAAa,EAAE,GAAf,MAAa,EAAG,SAAQ,UAAU;IAI9B;QACI,KAAK,EAAE,CAAC;QA0BZ,cAAS,GAAY,IAAI,CAAC;QAC1B,WAAM,GAAc,EAAE,CAAC;QA1BnB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAwBD,MAAM;QACF,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACjD,OAAO;SACV;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YACrD,IAAI,gBAAgB,GAAY,KAAK,CAAC;YACtC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;gBAC/B,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;oBAC7B,gBAAgB,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA,gCAAiC,UAAU,CAAC,KAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;iBAC/G;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,EAAE;gBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA,4DAA4D,CAAC,CAAC;aACtF;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK;QACD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,CAAgB;QAClB,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;YACnB,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;IACL,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;;;;;;;;;2FASwE,IAAI,CAAC,KAAK;iEACpC,IAAI,CAAC,MAAM,aAAa,IAAI,CAAC,SAAS;iEACtC,IAAI,CAAC,KAAK;;;;;;cAM7D,IAAI,CAAC,MAAM;;SAEhB,CAAC;IACN,CAAC;CACJ,CAAA;AA/EU,SAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;KAelB,CAAC;AAzBF;IADC,KAAK,EAAE;iCACQ;AA4BhB;IADC,KAAK,CAAC,UAAU,CAAC;iCACO;AA9BhB,EAAE;IADd,aAAa,CAAC,eAAe,CAAC;GAClB,EAAE,CA2Fd;SA3FY,EAAE","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\ndeclare var toxicity: any;\n\n@customElement('comment-sense')\nexport class CS extends LitElement {\n    @state()\n    protected model;\n\n    constructor() {\n        super();\n        toxicity.load(0.75).then(tmodel => {\n            this.model = tmodel;\n            this.isLoading = false;\n        });\n    }\n\n    static styles = css`\n        p{\n            text-align:center;\n        }\n        .tinit-center{\n            max-width:500px;\n            margin: 0 auto;\n            text-align:center;\n        }\n        sl-input{\n            margin: 5px 0;\n        }\n        sl-tag{\n            margin: 2px 2px;\n        }\n    `;\n\n    @query('sl-input')\n    input!: HTMLInputElement;\n    isLoading: boolean = true;\n    senses: unknown[] = [];\n\n    submit() {\n        if (this.isLoading || this.input.value.length === 0) {\n            return;\n        }\n        this.isLoading = true;\n        this.senses = [];\n        this.requestUpdate();\n        this.model.classify(this.input.value).then(predictions => {\n            let atleastOneExists: boolean = false;\n            predictions.forEach((prediction) => {\n                if (prediction.results[0].match) {\n                    atleastOneExists = true;\n                    this.senses.push(html`<sl-tag pill type = \"danger\">${(prediction.label as string).toUpperCase()}</sl-tag>`);\n                }\n            });\n            if (!atleastOneExists) {\n                this.senses.push(html`<sl-tag pill type =\"success\">No Toxicity Detected</sl-tag>`);\n            }\n            this.isLoading = false;\n            this.requestUpdate();\n        });\n    }\n\n    reset() {\n        this.input.value = \"\";\n        this.senses = [];\n        this.requestUpdate();\n    }\n\n    enter(e: KeyboardEvent) {\n        if (e.key === 'Enter') {\n            this.submit();\n        }\n    }\n\n    render() {\n        return html`\n        <div class=\"tinit-center\">\n            <p>Before you comment verbally or digitally make sure it's\n                not\n                toxic!\n                <br>\n                <small>For assistance use Artificial Intelligence ;)</small>\n            </p>\n            <br>\n            <sl-input pill label=\"Comment:\" placeholder=\"Your comment goes here.\" @keyup=${this.enter}></sl-input>\n            <sl-button pill size=\"small\" type=\"primary\" @click=${this.submit} ?loading=${this.isLoading}>Submit</sl-button>\n            <sl-button pill size=\"small\" type=\"default\" @click=${this.reset}>Reset</sl-button>        \n            <br>\n            <br>\n            <br>\n            <slot name=\"label\">Sense:</slot>\n            <br>\n            ${this.senses}\n        </div>\n        `;\n    }\n}"]}