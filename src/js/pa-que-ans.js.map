{"version":3,"file":"pa-que-ans.js","sourceRoot":"","sources":["../pa-que-ans.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAIhE,IAAa,GAAG,GAAhB,MAAa,GAAI,SAAQ,UAAU;IAK/B;QACI,KAAK,EAAE,CAAC;QAoCZ,cAAS,GAAY,IAAI,CAAC;QAnCtB,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAiCD,MAAM;QACF,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACzF,OAAO;SACV;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC7E,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aACvC;iBACI;gBACD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,iCAAiC,CAAC;aACzD;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,KAAK;QACD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,CAAgB;QAClB,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;YACnB,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;IACL,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;;;;;;;;;;;2GAWwF,IAAI,CAAC,KAAK;;qEAEhD,IAAI,CAAC,MAAM,aAAa,IAAI,CAAC,SAAS;qEACtC,IAAI,CAAC,KAAK;;;;;;SAMtE,CAAC;IACN,CAAC;CACJ,CAAA;AAtFU,UAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;KAoBlB,CAAC;AA9BF;IADC,KAAK,EAAE;kCACQ;AAiChB;IADC,KAAK,CAAC,UAAU,CAAC;sCACc;AAEhC;IADC,KAAK,CAAC,WAAW,CAAC;qCACS;AAE5B;IADC,KAAK,CAAC,SAAS,CAAC;mCACS;AAxCjB,GAAG;IADf,aAAa,CAAC,YAAY,CAAC;GACf,GAAG,CAmGf;SAnGY,GAAG","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\ndeclare var qna: any;\n\n@customElement('pa-que-ans')\nexport class PQA extends LitElement {\n\n    @state()\n    protected model;\n\n    constructor() {\n        super();\n        qna.load().then(qmodel => {\n            this.model = qmodel;\n            this.isLoading = false;\n        });\n    }\n\n    static styles = css`\n        p{\n            text-align:center;\n        }\n        .tinit-center{\n            max-width:500px;\n            margin: 0 auto;\n        }\n        sl-input{\n            margin: 15px 0;\n        }\n        .center{\n            text-align:center;\n        }\n        #txtarea::part(base){\n            border-radius: var(--sl-input-height-medium);\n        }\n        #txtarea::part(label),#question::part(label),#answer::part(label){\n            margin-left:var(--sl-spacing-medium);\n        }\n    `;\n\n    @query('#txtarea')\n    paragraph!: HTMLTextAreaElement;\n    @query('#question')\n    question!: HTMLInputElement;\n    @query('#answer')\n    answer!: HTMLInputElement;\n\n    isLoading: boolean = true;\n\n    submit() {\n        if (this.isLoading || this.paragraph.value.length === 0 || this.question.value.length === 0) {\n            return;\n        }\n        this.isLoading = true;\n        this.answer.value = \"\";\n        this.requestUpdate();\n        this.model.findAnswers(this.question.value, this.paragraph.value).then(answers => {\n            if (answers.length !== 0) {\n                this.answer.value = answers[0].text;\n            }\n            else {\n                this.answer.value = 'Oops can\\'t help you with that.';\n            }\n            this.isLoading = false;\n            this.requestUpdate();\n        });\n\n    }\n\n    reset() {\n        this.paragraph.value = \"\";\n        this.question.value = \"\";\n        this.answer.value = \"\";\n    }\n\n    enter(e: KeyboardEvent) {\n        if (e.key === 'Enter') {\n            this.submit();\n        }\n    }\n\n    render() {\n        return html`\n        <div class=\"tinit-center\">\n            <p>Lazy enough to find an answer to a question from a\n                paragraph? Don't\n                Worry this got you covered\n                <br>\n                <small>Enter a paragraph and a question related to it, you\n                    MIGHT get an answer.</small>\n            </p>\n            <br>\n            <sl-textarea id=\"txtarea\" rows=2 resize=\"auto\" placeholder=\"Your paragraph goes here.\" label=\"Paragraph:\"></sl-textarea>\n            <sl-input pill id=\"question\" label=\"Question:\" placeholder=\"Your question goes here.\" @keyup=${this.enter}></sl-input>\n            <div class=\"center\">\n                <sl-button pill size=\"small\" type=\"primary\" @click=${this.submit} ?loading=${this.isLoading}>Submit</sl-button>\n                <sl-button pill size=\"small\" type=\"default\" @click=${this.reset}>Reset</sl-button>\n            </div>\n            <br>\n            <sl-input pill id=\"answer\" label=\"Answer:\" readonly placeholder=\"Detected answer will appear here.\"></sl-input>\n        </div>\n\n        `;\n    }\n}"]}